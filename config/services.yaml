# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    App\ScheduleJobs\DeleteFileJob\DeleteMessageHandlerJob:
        autowire: true
        autoconfigure: true
    Symfony\Component\Security\Core\User\UserProviderInterface: '@security.user.provider.concrete.app_user_provider'
    App\DTOResolvers\UserDtoResolver:
        tags:
            - { name: controller.argument_value_resolver, priority: 100 }
    App\DTOResolvers\TaskDtoResolver:
        tags:
            - { name: controller.argument_value_resolver, priority: 100 }
    App\Exceptions\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception}
    Redis: '@snc_redis.default'
    App\Controller\SecurityController:
        arguments:
            $jwtManager: 'lexis_jwt_authentication.jwt_manager'
    App\Service\Impl\CacheServiceImpl:
        arguments:
            $redisClient: '@snc_redis.default'
    monolog.formatter.json:
        class: Monolog\Formatter\JsonFormatter
    Symfony\Component\Security\Http\Authenticator\AuthenticatorInterface: '@App\Config\Security\UserAuthenticator'
    App\Config\Security\UserAuthenticator:
        arguments:
            $jwtManager: '@lexik_jwt_authentication.jwt_manager'
            $userProvider: '@security.user.provider.concrete.app_user_provider'
            $entityManager: '@doctrine.orm.entity_manager'
    App\Config\Security\UserProvider:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'
        autowire: true
        autoconfigure: true
        public: false  # Optionally, make the service private (default is false
    App\Config\Security\UserPasswordEncoder:
        public: true
        autowire: true
        autoconfigure: true
    App\Command\MigratePasswordsCommand:
         tags: [ 'console.command' ]
    # App\Service\Impl\CacheServiceImpl:
    #    arguments:
    #        $redisClient: '@snc_redis.default'  # Injects the default Redis client
    # default configuration for services in *this* file
    App\Service\CacheService:
        alias: App\Service\Impl\CacheServiceImpl
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
