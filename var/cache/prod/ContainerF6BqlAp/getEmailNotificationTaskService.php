<?php

namespace ContainerF6BqlAp;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getEmailNotificationTaskService extends App_KernelProdContainer
{
    /*
     * Gets the private 'App\private_lib\listeners\EmailNotificationTask' shared autowired service.
     *
     * @return \App\private_lib\listeners\EmailNotificationTask
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->privates['mailer.transports'] ?? $container->load('getMailer_TransportsService'));

        if (isset($container->privates['App\\private_lib\\listeners\\EmailNotificationTask'])) {
            return $container->privates['App\\private_lib\\listeners\\EmailNotificationTask'];
        }
        $b = ($container->services['messenger.default_bus'] ?? $container->load('getMessenger_DefaultBusService'));

        if (isset($container->privates['App\\private_lib\\listeners\\EmailNotificationTask'])) {
            return $container->privates['App\\private_lib\\listeners\\EmailNotificationTask'];
        }
        $c = ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));

        if (isset($container->privates['App\\private_lib\\listeners\\EmailNotificationTask'])) {
            return $container->privates['App\\private_lib\\listeners\\EmailNotificationTask'];
        }

        return $container->privates['App\\private_lib\\listeners\\EmailNotificationTask'] = new \App\private_lib\listeners\EmailNotificationTask(($container->privates['monolog.logger'] ?? $container->load('getMonolog_LoggerService')), new \Symfony\Component\Mailer\Mailer($a, $b, $c));
    }
}
