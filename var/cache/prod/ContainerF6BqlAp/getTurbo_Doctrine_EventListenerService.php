<?php

namespace ContainerF6BqlAp;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getTurbo_Doctrine_EventListenerService extends App_KernelProdContainer
{
    /*
     * Gets the private 'turbo.doctrine.event_listener' shared service.
     *
     * @return \Symfony\UX\Turbo\Doctrine\BroadcastListener
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['turbo.doctrine.event_listener'] = new \Symfony\UX\Turbo\Doctrine\BroadcastListener(new \Symfony\UX\Turbo\Broadcaster\TwigBroadcaster(new \Symfony\UX\Turbo\Broadcaster\ImuxBroadcaster(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['turbo.mercure.default.broadcaster'] ?? $container->load('getTurbo_Mercure_Default_BroadcasterService'));
        }, 1)), ($container->privates['twig'] ?? $container->load('getTwigService')), ['App\\Entity\\' => 'broadcast/'], ($container->privates['turbo.id_accessor'] ?? $container->load('getTurbo_IdAccessorService'))), ($container->privates['annotations.cached_reader'] ?? $container->load('getAnnotations_CachedReaderService')));
    }
}
