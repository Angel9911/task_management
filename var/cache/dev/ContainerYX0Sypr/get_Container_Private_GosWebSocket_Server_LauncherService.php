<?php

namespace ContainerYX0Sypr;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_Container_Private_GosWebSocket_Server_LauncherService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public '.container.private.gos_web_socket.server.launcher' shared service.
     *
     * @return \Gos\Bundle\WebSocketBundle\Server\ServerLauncher
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'gos'.\DIRECTORY_SEPARATOR.'web-socket-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Server'.\DIRECTORY_SEPARATOR.'ServerLauncherInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'gos'.\DIRECTORY_SEPARATOR.'web-socket-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Server'.\DIRECTORY_SEPARATOR.'ServerLauncher.php';

        return $container->services['.container.private.gos_web_socket.server.launcher'] = new \Gos\Bundle\WebSocketBundle\Server\ServerLauncher(($container->services['.container.private.gos_web_socket.registry.server'] ?? $container->load('get_Container_Private_GosWebSocket_Registry_ServerService')));
    }
}
