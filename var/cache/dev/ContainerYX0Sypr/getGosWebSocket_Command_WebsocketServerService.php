<?php

namespace ContainerYX0Sypr;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getGosWebSocket_Command_WebsocketServerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'gos_web_socket.command.websocket_server' shared service.
     *
     * @return \Gos\Bundle\WebSocketBundle\Command\WebsocketServerCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'console'.\DIRECTORY_SEPARATOR.'Command'.\DIRECTORY_SEPARATOR.'Command.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'gos'.\DIRECTORY_SEPARATOR.'web-socket-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Command'.\DIRECTORY_SEPARATOR.'WebsocketServerCommand.php';

        $container->privates['gos_web_socket.command.websocket_server'] = $instance = new \Gos\Bundle\WebSocketBundle\Command\WebsocketServerCommand(($container->services['.container.private.gos_web_socket.server.launcher'] ?? $container->load('get_Container_Private_GosWebSocket_Server_LauncherService')), '127.0.0.1', 8080, ($container->services['.container.private.gos_web_socket.registry.server'] ?? $container->load('get_Container_Private_GosWebSocket_Registry_ServerService')));

        $instance->setName('gos:websocket:server');
        $instance->setDescription('Starts the websocket server');

        return $instance;
    }
}
