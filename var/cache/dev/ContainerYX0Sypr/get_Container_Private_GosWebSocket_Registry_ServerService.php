<?php

namespace ContainerYX0Sypr;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_Container_Private_GosWebSocket_Registry_ServerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public '.container.private.gos_web_socket.registry.server' shared service.
     *
     * @return \Gos\Bundle\WebSocketBundle\Server\App\Registry\ServerRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'gos'.\DIRECTORY_SEPARATOR.'web-socket-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Server'.\DIRECTORY_SEPARATOR.'App'.\DIRECTORY_SEPARATOR.'Registry'.\DIRECTORY_SEPARATOR.'ServerRegistry.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'gos'.\DIRECTORY_SEPARATOR.'web-socket-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Server'.\DIRECTORY_SEPARATOR.'Type'.\DIRECTORY_SEPARATOR.'ServerInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'gos'.\DIRECTORY_SEPARATOR.'web-socket-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Server'.\DIRECTORY_SEPARATOR.'Type'.\DIRECTORY_SEPARATOR.'WebSocketServer.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'gos'.\DIRECTORY_SEPARATOR.'web-socket-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Server'.\DIRECTORY_SEPARATOR.'App'.\DIRECTORY_SEPARATOR.'ServerBuilderInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'gos'.\DIRECTORY_SEPARATOR.'web-socket-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Server'.\DIRECTORY_SEPARATOR.'App'.\DIRECTORY_SEPARATOR.'ServerBuilder.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'gos'.\DIRECTORY_SEPARATOR.'web-socket-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Server'.\DIRECTORY_SEPARATOR.'App'.\DIRECTORY_SEPARATOR.'Registry'.\DIRECTORY_SEPARATOR.'OriginRegistry.php';

        $container->services['.container.private.gos_web_socket.registry.server'] = $instance = new \Gos\Bundle\WebSocketBundle\Server\App\Registry\ServerRegistry();

        $a = ($container->services['.container.private.gos_web_socket.server.event_loop'] ?? $container->load('get_Container_Private_GosWebSocket_Server_EventLoopService'));
        $b = ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));

        $c = new \Gos\Bundle\WebSocketBundle\Server\Type\WebSocketServer(new \Gos\Bundle\WebSocketBundle\Server\App\ServerBuilder($a, ($container->services['.container.private.gos_web_socket.wamp.topic_manager'] ?? $container->load('get_Container_Private_GosWebSocket_Wamp_TopicManagerService')), ($container->services['.container.private.gos_web_socket.registry.origins'] ??= new \Gos\Bundle\WebSocketBundle\Server\App\Registry\OriginRegistry()), $b, false, false, 30, false, []), $a, $b, false, []);
        $c->setLogger(($container->privates['monolog.logger.websocket'] ?? $container->load('getMonolog_Logger_WebsocketService')));

        $instance->addServer($c);

        return $instance;
    }
}
